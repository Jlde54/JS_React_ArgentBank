swagger: '2.0'
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: '1.0.0'
  termsOfService: 'http://swagger.io/terms/'
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:

  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: '#/definitions/Login'
      produces:
        - application/json
      responses:
        '200':
          description: Login Successfully
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error

  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: '#/definitions/User'
      produces:
        - application/json
      responses:
        '200':
          description: Signup Successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error

  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: '#/definitions/UserProfile'
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error

  /user/accounts:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Bank Accounts API
      description: API for fetching a user's bank accounts
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: User's bank accounts retrieved successfully
          schema:
            type: array
            items :
              $ref: '#/definitions/Account'
        '401':
          description: Not authorized.
        '500':
          description: Internal Server Error

  /accounts/{accountId}/transactions:
    post:
      security:
        - Bearer: []
      tags:
        - Transactions
      summary: Get paginated transactions for a specific account
      description: Retrieves a paginated list of transactions for the specified account.
      parameters:
        - in: path
          name: accountId
          required: true
          type: string
          description: Unique account identifier.
        - in: body
          name: body
          required: false
          schema:
            type: object
            properties:
              page:
                type: integer
                default: 1
                description: Page number to retrieve.
              limit:
                type: integer
                default: 10
                description: Transactions per page.
      responses:
        200:
          description: Transaction list successfully retrieved.
          schema:
            type: array
            items:
              $ref: '#/definitions/Transaction'
        400:
          description: Invalid request.
        401:
          description: Not authorized.
        500:
          description: Internal Server Error.

  /transactions/{transactionId}:
    post:
      security:
        - Bearer: []
      tags:
        - Transactions
      summary: Get details of a specific transaction
      description: Retrieves detailed information for a given transaction.
      parameters:
        - in: path
          name: transactionId
          required: true
          type: string
          description: Unique transaction identifier.
      responses:
        200:
          description: Transaction details successfully retrieved.
          schema:
            $ref: '#/definitions/Transaction'
        400:
          description: Invalid request.
        401:
          description: Not authorized.
        404:
          description: Transaction not found.
        500:
          description: Internal Server Error.

  /transactions/{transactionId}/category:
    patch:
      security:
        - Bearer: []
      tags:
        - Transactions
      summary: Update the transaction category
      description: Allows you to change the category associated with a specific transaction.
      parameters:
        - in: path
          name: transactionId
          required: true
          type: string
          description: Unique identifier of the transaction.
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UpdateTransactionCategory'
      responses:
        200:
          description: Category updated successfully.
          schema:
            $ref: '#/definitions/Transaction'
        400:
          description: Invalid request.
        401:
          description: Not authorized.
        404:
          description: Transaction not found.
        500:
          description: Internal Server Error.

  /transactions/{transactionId}/new-field:
    patch:
      security:
        - Bearer: []
      tags:
        - Transactions
      summary: Add a new field in a transaction
      description: Allows to add a new field to a specific transaction.
      parameters:
        - in: path
          name: transactionId
          required: true
          type: string
          description: Unique identifier of the transaction.
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UpdateTransactionNewField'
      responses:
        200:
          description: New field added successfully.
          schema:
            $ref: '#/definitions/Transaction'
        400:
          description: Invalid request.
        401:
          description: Not authorized.
        404:
          description: Transaction not found.
        500:
          description: Internal Server Error

securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header

definitions:

  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name

  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password

  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string

  LoginResponse:
    type: object
    properties:
      token:
        type: string

  UserProfile:
    type: object
    properties:
      firstName:
        type: string
      lastName:
        type: string

  Account:
    type: object
    properties:
      accountId:
        type: string
        description: Account id.
        example: "x8349"
      name:
        type: string
        description: Account name
        example: "Argent Bank Checking"
      type:
        type: string
        description: Account type.
        example: "Checking"
      balance:
        type: number
        format: double
        description: Available balance.
        example: 2082.79
      currency:
        type: string
        description: Currency.
        example: "$"

  Transaction:
    type: object
    properties:
      transactionid:
        type: string
        description: Transaction id.
        example: "B-123456"
      accountId:
        type: string
        description: Account id.
        example: "x8349"
      date:
        type: string
        format: date
        description: Date.
        example: "2020-06-20"
      description:
        type: string
        description: Description.
        example: "Golden Sun Bakery"
      amount:
        type: number
        format: double
        description: Amount transaction.
        example: 5.00
      currency:
        type: string
        description: Currency.
        example: "$"
      transactionType:
        type: string
        description: Transaction type.
        example: "Debit"
      balance:
        type: number
        format: double
        description: balance
        example: 2082.79
      category:
        type: string
        description: Category.
        example: "Food"
      note:
        type: string
        description: Note.
        example: "Supermarket"

  UpdateTransactionCategory:
    type: object
    properties:
      category:
        type: string
        description: New category transaction.
    required:
      - category

  UpdateTransactionNewField:
    type: object
    properties:
      newField:
        type: string
        description: New user-defined field.
    required:
      - newField